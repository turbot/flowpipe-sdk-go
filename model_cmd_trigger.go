/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the CmdTrigger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CmdTrigger{}

// CmdTrigger struct for CmdTrigger
type CmdTrigger struct {
	Args map[string]interface{} `json:"args,omitempty"`
	ArgsString *map[string]string `json:"args_string,omitempty"`
	Command string `json:"command"`
	// Sepcify execution id, if not specified, a new execution id will be created
	ExecutionId *string `json:"execution_id,omitempty"`
	ExecutionMode *string `json:"execution_mode,omitempty"`
	WaitRetry *int32 `json:"wait_retry,omitempty"`
}
func (o CmdTrigger) GetResourceType() string {
	return "CmdTrigger"
}
// NewCmdTrigger instantiates a new CmdTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCmdTrigger(command string) *CmdTrigger {
	this := CmdTrigger{}
	this.Command = command
	return &this
}

// NewCmdTriggerWithDefaults instantiates a new CmdTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCmdTriggerWithDefaults() *CmdTrigger {
	this := CmdTrigger{}
	return &this
}

// GetArgs returns the Args field value if set, zero value otherwise.
func (o *CmdTrigger) GetArgs() map[string]interface{} {
	if o == nil || IsNil(o.Args) {
		var ret map[string]interface{}
		return ret
	}
	return o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmdTrigger) GetArgsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Args) {
		return map[string]interface{}{}, false
	}
	return o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *CmdTrigger) HasArgs() bool {
	if o != nil && !IsNil(o.Args) {
		return true
	}

	return false
}

// SetArgs gets a reference to the given map[string]interface{} and assigns it to the Args field.
func (o *CmdTrigger) SetArgs(v map[string]interface{}) {
	o.Args = v
}

// GetArgsString returns the ArgsString field value if set, zero value otherwise.
func (o *CmdTrigger) GetArgsString() map[string]string {
	if o == nil || IsNil(o.ArgsString) {
		var ret map[string]string
		return ret
	}
	return *o.ArgsString
}

// GetArgsStringOk returns a tuple with the ArgsString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmdTrigger) GetArgsStringOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ArgsString) {
		return nil, false
	}
	return o.ArgsString, true
}

// HasArgsString returns a boolean if a field has been set.
func (o *CmdTrigger) HasArgsString() bool {
	if o != nil && !IsNil(o.ArgsString) {
		return true
	}

	return false
}

// SetArgsString gets a reference to the given map[string]string and assigns it to the ArgsString field.
func (o *CmdTrigger) SetArgsString(v map[string]string) {
	o.ArgsString = &v
}

// GetCommand returns the Command field value
func (o *CmdTrigger) GetCommand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *CmdTrigger) GetCommandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *CmdTrigger) SetCommand(v string) {
	o.Command = v
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *CmdTrigger) GetExecutionId() string {
	if o == nil || IsNil(o.ExecutionId) {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmdTrigger) GetExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionId) {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *CmdTrigger) HasExecutionId() bool {
	if o != nil && !IsNil(o.ExecutionId) {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *CmdTrigger) SetExecutionId(v string) {
	o.ExecutionId = &v
}

// GetExecutionMode returns the ExecutionMode field value if set, zero value otherwise.
func (o *CmdTrigger) GetExecutionMode() string {
	if o == nil || IsNil(o.ExecutionMode) {
		var ret string
		return ret
	}
	return *o.ExecutionMode
}

// GetExecutionModeOk returns a tuple with the ExecutionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmdTrigger) GetExecutionModeOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionMode) {
		return nil, false
	}
	return o.ExecutionMode, true
}

// HasExecutionMode returns a boolean if a field has been set.
func (o *CmdTrigger) HasExecutionMode() bool {
	if o != nil && !IsNil(o.ExecutionMode) {
		return true
	}

	return false
}

// SetExecutionMode gets a reference to the given string and assigns it to the ExecutionMode field.
func (o *CmdTrigger) SetExecutionMode(v string) {
	o.ExecutionMode = &v
}

// GetWaitRetry returns the WaitRetry field value if set, zero value otherwise.
func (o *CmdTrigger) GetWaitRetry() int32 {
	if o == nil || IsNil(o.WaitRetry) {
		var ret int32
		return ret
	}
	return *o.WaitRetry
}

// GetWaitRetryOk returns a tuple with the WaitRetry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmdTrigger) GetWaitRetryOk() (*int32, bool) {
	if o == nil || IsNil(o.WaitRetry) {
		return nil, false
	}
	return o.WaitRetry, true
}

// HasWaitRetry returns a boolean if a field has been set.
func (o *CmdTrigger) HasWaitRetry() bool {
	if o != nil && !IsNil(o.WaitRetry) {
		return true
	}

	return false
}

// SetWaitRetry gets a reference to the given int32 and assigns it to the WaitRetry field.
func (o *CmdTrigger) SetWaitRetry(v int32) {
	o.WaitRetry = &v
}

func (o CmdTrigger) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CmdTrigger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Args) {
		toSerialize["args"] = o.Args
	}
	if !IsNil(o.ArgsString) {
		toSerialize["args_string"] = o.ArgsString
	}
	toSerialize["command"] = o.Command
	if !IsNil(o.ExecutionId) {
		toSerialize["execution_id"] = o.ExecutionId
	}
	if !IsNil(o.ExecutionMode) {
		toSerialize["execution_mode"] = o.ExecutionMode
	}
	if !IsNil(o.WaitRetry) {
		toSerialize["wait_retry"] = o.WaitRetry
	}
	return toSerialize, nil
}

type NullableCmdTrigger struct {
	value *CmdTrigger
	isSet bool
}

func (v NullableCmdTrigger) Get() *CmdTrigger {
	return v.value
}

func (v *NullableCmdTrigger) Set(val *CmdTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableCmdTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableCmdTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCmdTrigger(val *CmdTrigger) *NullableCmdTrigger {
	return &NullableCmdTrigger{value: val, isSet: true}
}

func (v NullableCmdTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCmdTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


