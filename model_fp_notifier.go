/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the FpNotifier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FpNotifier{}

// FpNotifier struct for FpNotifier
type FpNotifier struct {
	Description *string `json:"description,omitempty"`
	Documentation *string `json:"documentation,omitempty"`
	EndLineNumber *int32 `json:"end_line_number,omitempty"`
	FileName *string `json:"file_name,omitempty"`
	Name *string `json:"name,omitempty"`
	StartLineNumber *int32 `json:"start_line_number,omitempty"`
	Title *string `json:"title,omitempty"`
}
func (o FpNotifier) GetResourceType() string {
	return "FpNotifier"
}
// NewFpNotifier instantiates a new FpNotifier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFpNotifier() *FpNotifier {
	this := FpNotifier{}
	return &this
}

// NewFpNotifierWithDefaults instantiates a new FpNotifier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFpNotifierWithDefaults() *FpNotifier {
	this := FpNotifier{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FpNotifier) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpNotifier) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FpNotifier) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FpNotifier) SetDescription(v string) {
	o.Description = &v
}

// GetDocumentation returns the Documentation field value if set, zero value otherwise.
func (o *FpNotifier) GetDocumentation() string {
	if o == nil || IsNil(o.Documentation) {
		var ret string
		return ret
	}
	return *o.Documentation
}

// GetDocumentationOk returns a tuple with the Documentation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpNotifier) GetDocumentationOk() (*string, bool) {
	if o == nil || IsNil(o.Documentation) {
		return nil, false
	}
	return o.Documentation, true
}

// HasDocumentation returns a boolean if a field has been set.
func (o *FpNotifier) HasDocumentation() bool {
	if o != nil && !IsNil(o.Documentation) {
		return true
	}

	return false
}

// SetDocumentation gets a reference to the given string and assigns it to the Documentation field.
func (o *FpNotifier) SetDocumentation(v string) {
	o.Documentation = &v
}

// GetEndLineNumber returns the EndLineNumber field value if set, zero value otherwise.
func (o *FpNotifier) GetEndLineNumber() int32 {
	if o == nil || IsNil(o.EndLineNumber) {
		var ret int32
		return ret
	}
	return *o.EndLineNumber
}

// GetEndLineNumberOk returns a tuple with the EndLineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpNotifier) GetEndLineNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.EndLineNumber) {
		return nil, false
	}
	return o.EndLineNumber, true
}

// HasEndLineNumber returns a boolean if a field has been set.
func (o *FpNotifier) HasEndLineNumber() bool {
	if o != nil && !IsNil(o.EndLineNumber) {
		return true
	}

	return false
}

// SetEndLineNumber gets a reference to the given int32 and assigns it to the EndLineNumber field.
func (o *FpNotifier) SetEndLineNumber(v int32) {
	o.EndLineNumber = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *FpNotifier) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpNotifier) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *FpNotifier) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *FpNotifier) SetFileName(v string) {
	o.FileName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FpNotifier) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpNotifier) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FpNotifier) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FpNotifier) SetName(v string) {
	o.Name = &v
}

// GetStartLineNumber returns the StartLineNumber field value if set, zero value otherwise.
func (o *FpNotifier) GetStartLineNumber() int32 {
	if o == nil || IsNil(o.StartLineNumber) {
		var ret int32
		return ret
	}
	return *o.StartLineNumber
}

// GetStartLineNumberOk returns a tuple with the StartLineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpNotifier) GetStartLineNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.StartLineNumber) {
		return nil, false
	}
	return o.StartLineNumber, true
}

// HasStartLineNumber returns a boolean if a field has been set.
func (o *FpNotifier) HasStartLineNumber() bool {
	if o != nil && !IsNil(o.StartLineNumber) {
		return true
	}

	return false
}

// SetStartLineNumber gets a reference to the given int32 and assigns it to the StartLineNumber field.
func (o *FpNotifier) SetStartLineNumber(v int32) {
	o.StartLineNumber = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *FpNotifier) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpNotifier) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *FpNotifier) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *FpNotifier) SetTitle(v string) {
	o.Title = &v
}

func (o FpNotifier) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FpNotifier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Documentation) {
		toSerialize["documentation"] = o.Documentation
	}
	if !IsNil(o.EndLineNumber) {
		toSerialize["end_line_number"] = o.EndLineNumber
	}
	if !IsNil(o.FileName) {
		toSerialize["file_name"] = o.FileName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StartLineNumber) {
		toSerialize["start_line_number"] = o.StartLineNumber
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableFpNotifier struct {
	value *FpNotifier
	isSet bool
}

func (v NullableFpNotifier) Get() *FpNotifier {
	return v.value
}

func (v *NullableFpNotifier) Set(val *FpNotifier) {
	v.value = val
	v.isSet = true
}

func (v NullableFpNotifier) IsSet() bool {
	return v.isSet
}

func (v *NullableFpNotifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFpNotifier(val *FpNotifier) *NullableFpNotifier {
	return &NullableFpNotifier{value: val, isSet: true}
}

func (v NullableFpNotifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFpNotifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


