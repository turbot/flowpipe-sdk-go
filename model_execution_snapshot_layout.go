/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the ExecutionSnapshotLayout type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionSnapshotLayout{}

// ExecutionSnapshotLayout struct for ExecutionSnapshotLayout
type ExecutionSnapshotLayout struct {
	Children []ExecutionSnapshotLayout `json:"children,omitempty"`
	Name *string `json:"name,omitempty"`
	PanelType *string `json:"panel_type,omitempty"`
}
func (o ExecutionSnapshotLayout) GetResourceType() string {
	return "ExecutionSnapshotLayout"
}
// NewExecutionSnapshotLayout instantiates a new ExecutionSnapshotLayout object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionSnapshotLayout() *ExecutionSnapshotLayout {
	this := ExecutionSnapshotLayout{}
	return &this
}

// NewExecutionSnapshotLayoutWithDefaults instantiates a new ExecutionSnapshotLayout object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionSnapshotLayoutWithDefaults() *ExecutionSnapshotLayout {
	this := ExecutionSnapshotLayout{}
	return &this
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *ExecutionSnapshotLayout) GetChildren() []ExecutionSnapshotLayout {
	if o == nil || IsNil(o.Children) {
		var ret []ExecutionSnapshotLayout
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshotLayout) GetChildrenOk() ([]ExecutionSnapshotLayout, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *ExecutionSnapshotLayout) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []ExecutionSnapshotLayout and assigns it to the Children field.
func (o *ExecutionSnapshotLayout) SetChildren(v []ExecutionSnapshotLayout) {
	o.Children = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExecutionSnapshotLayout) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshotLayout) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExecutionSnapshotLayout) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExecutionSnapshotLayout) SetName(v string) {
	o.Name = &v
}

// GetPanelType returns the PanelType field value if set, zero value otherwise.
func (o *ExecutionSnapshotLayout) GetPanelType() string {
	if o == nil || IsNil(o.PanelType) {
		var ret string
		return ret
	}
	return *o.PanelType
}

// GetPanelTypeOk returns a tuple with the PanelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshotLayout) GetPanelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PanelType) {
		return nil, false
	}
	return o.PanelType, true
}

// HasPanelType returns a boolean if a field has been set.
func (o *ExecutionSnapshotLayout) HasPanelType() bool {
	if o != nil && !IsNil(o.PanelType) {
		return true
	}

	return false
}

// SetPanelType gets a reference to the given string and assigns it to the PanelType field.
func (o *ExecutionSnapshotLayout) SetPanelType(v string) {
	o.PanelType = &v
}

func (o ExecutionSnapshotLayout) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionSnapshotLayout) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PanelType) {
		toSerialize["panel_type"] = o.PanelType
	}
	return toSerialize, nil
}

type NullableExecutionSnapshotLayout struct {
	value *ExecutionSnapshotLayout
	isSet bool
}

func (v NullableExecutionSnapshotLayout) Get() *ExecutionSnapshotLayout {
	return v.value
}

func (v *NullableExecutionSnapshotLayout) Set(val *ExecutionSnapshotLayout) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionSnapshotLayout) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionSnapshotLayout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionSnapshotLayout(val *ExecutionSnapshotLayout) *NullableExecutionSnapshotLayout {
	return &NullableExecutionSnapshotLayout{value: val, isSet: true}
}

func (v NullableExecutionSnapshotLayout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionSnapshotLayout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


