/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the ExecutionSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionSnapshot{}

// ExecutionSnapshot struct for ExecutionSnapshot
type ExecutionSnapshot struct {
	EndTime *string `json:"end_time,omitempty"`
	Layout *ExecutionSnapshotLayout `json:"layout,omitempty"`
	Panels *map[string]ExecutionSnapshotPanel `json:"panels,omitempty"`
	SchemaVersion *string `json:"schema_version,omitempty"`
	StartTime *string `json:"start_time,omitempty"`
}
func (o ExecutionSnapshot) GetResourceType() string {
	return "ExecutionSnapshot"
}
// NewExecutionSnapshot instantiates a new ExecutionSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionSnapshot() *ExecutionSnapshot {
	this := ExecutionSnapshot{}
	return &this
}

// NewExecutionSnapshotWithDefaults instantiates a new ExecutionSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionSnapshotWithDefaults() *ExecutionSnapshot {
	this := ExecutionSnapshot{}
	return &this
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *ExecutionSnapshot) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshot) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *ExecutionSnapshot) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *ExecutionSnapshot) SetEndTime(v string) {
	o.EndTime = &v
}

// GetLayout returns the Layout field value if set, zero value otherwise.
func (o *ExecutionSnapshot) GetLayout() ExecutionSnapshotLayout {
	if o == nil || IsNil(o.Layout) {
		var ret ExecutionSnapshotLayout
		return ret
	}
	return *o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshot) GetLayoutOk() (*ExecutionSnapshotLayout, bool) {
	if o == nil || IsNil(o.Layout) {
		return nil, false
	}
	return o.Layout, true
}

// HasLayout returns a boolean if a field has been set.
func (o *ExecutionSnapshot) HasLayout() bool {
	if o != nil && !IsNil(o.Layout) {
		return true
	}

	return false
}

// SetLayout gets a reference to the given ExecutionSnapshotLayout and assigns it to the Layout field.
func (o *ExecutionSnapshot) SetLayout(v ExecutionSnapshotLayout) {
	o.Layout = &v
}

// GetPanels returns the Panels field value if set, zero value otherwise.
func (o *ExecutionSnapshot) GetPanels() map[string]ExecutionSnapshotPanel {
	if o == nil || IsNil(o.Panels) {
		var ret map[string]ExecutionSnapshotPanel
		return ret
	}
	return *o.Panels
}

// GetPanelsOk returns a tuple with the Panels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshot) GetPanelsOk() (*map[string]ExecutionSnapshotPanel, bool) {
	if o == nil || IsNil(o.Panels) {
		return nil, false
	}
	return o.Panels, true
}

// HasPanels returns a boolean if a field has been set.
func (o *ExecutionSnapshot) HasPanels() bool {
	if o != nil && !IsNil(o.Panels) {
		return true
	}

	return false
}

// SetPanels gets a reference to the given map[string]ExecutionSnapshotPanel and assigns it to the Panels field.
func (o *ExecutionSnapshot) SetPanels(v map[string]ExecutionSnapshotPanel) {
	o.Panels = &v
}

// GetSchemaVersion returns the SchemaVersion field value if set, zero value otherwise.
func (o *ExecutionSnapshot) GetSchemaVersion() string {
	if o == nil || IsNil(o.SchemaVersion) {
		var ret string
		return ret
	}
	return *o.SchemaVersion
}

// GetSchemaVersionOk returns a tuple with the SchemaVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshot) GetSchemaVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SchemaVersion) {
		return nil, false
	}
	return o.SchemaVersion, true
}

// HasSchemaVersion returns a boolean if a field has been set.
func (o *ExecutionSnapshot) HasSchemaVersion() bool {
	if o != nil && !IsNil(o.SchemaVersion) {
		return true
	}

	return false
}

// SetSchemaVersion gets a reference to the given string and assigns it to the SchemaVersion field.
func (o *ExecutionSnapshot) SetSchemaVersion(v string) {
	o.SchemaVersion = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *ExecutionSnapshot) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshot) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *ExecutionSnapshot) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *ExecutionSnapshot) SetStartTime(v string) {
	o.StartTime = &v
}

func (o ExecutionSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	if !IsNil(o.Layout) {
		toSerialize["layout"] = o.Layout
	}
	if !IsNil(o.Panels) {
		toSerialize["panels"] = o.Panels
	}
	if !IsNil(o.SchemaVersion) {
		toSerialize["schema_version"] = o.SchemaVersion
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	return toSerialize, nil
}

type NullableExecutionSnapshot struct {
	value *ExecutionSnapshot
	isSet bool
}

func (v NullableExecutionSnapshot) Get() *ExecutionSnapshot {
	return v.value
}

func (v *NullableExecutionSnapshot) Set(val *ExecutionSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionSnapshot(val *ExecutionSnapshot) *NullableExecutionSnapshot {
	return &NullableExecutionSnapshot{value: val, isSet: true}
}

func (v NullableExecutionSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


