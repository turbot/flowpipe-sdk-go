/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the ModconfigStepError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModconfigStepError{}

// ModconfigStepError struct for ModconfigStepError
type ModconfigStepError struct {
	Error *PerrErrorModel `json:"error,omitempty"`
	Pipeline *string `json:"pipeline,omitempty"`
	PipelineExecutionId *string `json:"pipeline_execution_id,omitempty"`
	Step *string `json:"step,omitempty"`
	StepExecutionId *string `json:"step_execution_id,omitempty"`
}
func (o ModconfigStepError) GetResourceType() string {
	return "ModconfigStepError"
}
// NewModconfigStepError instantiates a new ModconfigStepError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModconfigStepError() *ModconfigStepError {
	this := ModconfigStepError{}
	return &this
}

// NewModconfigStepErrorWithDefaults instantiates a new ModconfigStepError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModconfigStepErrorWithDefaults() *ModconfigStepError {
	this := ModconfigStepError{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ModconfigStepError) GetError() PerrErrorModel {
	if o == nil || IsNil(o.Error) {
		var ret PerrErrorModel
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModconfigStepError) GetErrorOk() (*PerrErrorModel, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ModconfigStepError) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given PerrErrorModel and assigns it to the Error field.
func (o *ModconfigStepError) SetError(v PerrErrorModel) {
	o.Error = &v
}

// GetPipeline returns the Pipeline field value if set, zero value otherwise.
func (o *ModconfigStepError) GetPipeline() string {
	if o == nil || IsNil(o.Pipeline) {
		var ret string
		return ret
	}
	return *o.Pipeline
}

// GetPipelineOk returns a tuple with the Pipeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModconfigStepError) GetPipelineOk() (*string, bool) {
	if o == nil || IsNil(o.Pipeline) {
		return nil, false
	}
	return o.Pipeline, true
}

// HasPipeline returns a boolean if a field has been set.
func (o *ModconfigStepError) HasPipeline() bool {
	if o != nil && !IsNil(o.Pipeline) {
		return true
	}

	return false
}

// SetPipeline gets a reference to the given string and assigns it to the Pipeline field.
func (o *ModconfigStepError) SetPipeline(v string) {
	o.Pipeline = &v
}

// GetPipelineExecutionId returns the PipelineExecutionId field value if set, zero value otherwise.
func (o *ModconfigStepError) GetPipelineExecutionId() string {
	if o == nil || IsNil(o.PipelineExecutionId) {
		var ret string
		return ret
	}
	return *o.PipelineExecutionId
}

// GetPipelineExecutionIdOk returns a tuple with the PipelineExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModconfigStepError) GetPipelineExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineExecutionId) {
		return nil, false
	}
	return o.PipelineExecutionId, true
}

// HasPipelineExecutionId returns a boolean if a field has been set.
func (o *ModconfigStepError) HasPipelineExecutionId() bool {
	if o != nil && !IsNil(o.PipelineExecutionId) {
		return true
	}

	return false
}

// SetPipelineExecutionId gets a reference to the given string and assigns it to the PipelineExecutionId field.
func (o *ModconfigStepError) SetPipelineExecutionId(v string) {
	o.PipelineExecutionId = &v
}

// GetStep returns the Step field value if set, zero value otherwise.
func (o *ModconfigStepError) GetStep() string {
	if o == nil || IsNil(o.Step) {
		var ret string
		return ret
	}
	return *o.Step
}

// GetStepOk returns a tuple with the Step field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModconfigStepError) GetStepOk() (*string, bool) {
	if o == nil || IsNil(o.Step) {
		return nil, false
	}
	return o.Step, true
}

// HasStep returns a boolean if a field has been set.
func (o *ModconfigStepError) HasStep() bool {
	if o != nil && !IsNil(o.Step) {
		return true
	}

	return false
}

// SetStep gets a reference to the given string and assigns it to the Step field.
func (o *ModconfigStepError) SetStep(v string) {
	o.Step = &v
}

// GetStepExecutionId returns the StepExecutionId field value if set, zero value otherwise.
func (o *ModconfigStepError) GetStepExecutionId() string {
	if o == nil || IsNil(o.StepExecutionId) {
		var ret string
		return ret
	}
	return *o.StepExecutionId
}

// GetStepExecutionIdOk returns a tuple with the StepExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModconfigStepError) GetStepExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.StepExecutionId) {
		return nil, false
	}
	return o.StepExecutionId, true
}

// HasStepExecutionId returns a boolean if a field has been set.
func (o *ModconfigStepError) HasStepExecutionId() bool {
	if o != nil && !IsNil(o.StepExecutionId) {
		return true
	}

	return false
}

// SetStepExecutionId gets a reference to the given string and assigns it to the StepExecutionId field.
func (o *ModconfigStepError) SetStepExecutionId(v string) {
	o.StepExecutionId = &v
}

func (o ModconfigStepError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModconfigStepError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Pipeline) {
		toSerialize["pipeline"] = o.Pipeline
	}
	if !IsNil(o.PipelineExecutionId) {
		toSerialize["pipeline_execution_id"] = o.PipelineExecutionId
	}
	if !IsNil(o.Step) {
		toSerialize["step"] = o.Step
	}
	if !IsNil(o.StepExecutionId) {
		toSerialize["step_execution_id"] = o.StepExecutionId
	}
	return toSerialize, nil
}

type NullableModconfigStepError struct {
	value *ModconfigStepError
	isSet bool
}

func (v NullableModconfigStepError) Get() *ModconfigStepError {
	return v.value
}

func (v *NullableModconfigStepError) Set(val *ModconfigStepError) {
	v.value = val
	v.isSet = true
}

func (v NullableModconfigStepError) IsSet() bool {
	return v.isSet
}

func (v *NullableModconfigStepError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModconfigStepError(val *ModconfigStepError) *NullableModconfigStepError {
	return &NullableModconfigStepError{value: val, isSet: true}
}

func (v NullableModconfigStepError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModconfigStepError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


