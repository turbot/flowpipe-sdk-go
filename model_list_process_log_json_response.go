/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the ListProcessLogJSONResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProcessLogJSONResponse{}

// ListProcessLogJSONResponse struct for ListProcessLogJSONResponse
type ListProcessLogJSONResponse struct {
	Items []ProcessEventLog `json:"items,omitempty"`
	NextToken *string `json:"next_token,omitempty"`
}
func (o ListProcessLogJSONResponse) GetResourceType() string {
	return "ListProcessLogJSONResponse"
}
// NewListProcessLogJSONResponse instantiates a new ListProcessLogJSONResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProcessLogJSONResponse() *ListProcessLogJSONResponse {
	this := ListProcessLogJSONResponse{}
	return &this
}

// NewListProcessLogJSONResponseWithDefaults instantiates a new ListProcessLogJSONResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProcessLogJSONResponseWithDefaults() *ListProcessLogJSONResponse {
	this := ListProcessLogJSONResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListProcessLogJSONResponse) GetItems() []ProcessEventLog {
	if o == nil || IsNil(o.Items) {
		var ret []ProcessEventLog
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProcessLogJSONResponse) GetItemsOk() ([]ProcessEventLog, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ListProcessLogJSONResponse) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ProcessEventLog and assigns it to the Items field.
func (o *ListProcessLogJSONResponse) SetItems(v []ProcessEventLog) {
	o.Items = v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *ListProcessLogJSONResponse) GetNextToken() string {
	if o == nil || IsNil(o.NextToken) {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProcessLogJSONResponse) GetNextTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextToken) {
		return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *ListProcessLogJSONResponse) HasNextToken() bool {
	if o != nil && !IsNil(o.NextToken) {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *ListProcessLogJSONResponse) SetNextToken(v string) {
	o.NextToken = &v
}

func (o ListProcessLogJSONResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProcessLogJSONResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.NextToken) {
		toSerialize["next_token"] = o.NextToken
	}
	return toSerialize, nil
}

type NullableListProcessLogJSONResponse struct {
	value *ListProcessLogJSONResponse
	isSet bool
}

func (v NullableListProcessLogJSONResponse) Get() *ListProcessLogJSONResponse {
	return v.value
}

func (v *NullableListProcessLogJSONResponse) Set(val *ListProcessLogJSONResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListProcessLogJSONResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListProcessLogJSONResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProcessLogJSONResponse(val *ListProcessLogJSONResponse) *NullableListProcessLogJSONResponse {
	return &NullableListProcessLogJSONResponse{value: val, isSet: true}
}

func (v NullableListProcessLogJSONResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProcessLogJSONResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


