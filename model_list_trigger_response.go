/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the ListTriggerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTriggerResponse{}

// ListTriggerResponse struct for ListTriggerResponse
type ListTriggerResponse struct {
	Items []FpTrigger `json:"items,omitempty"`
	NextToken *string `json:"next_token,omitempty"`
}
func (o ListTriggerResponse) GetResourceType() string {
	return "ListTriggerResponse"
}
// NewListTriggerResponse instantiates a new ListTriggerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTriggerResponse() *ListTriggerResponse {
	this := ListTriggerResponse{}
	return &this
}

// NewListTriggerResponseWithDefaults instantiates a new ListTriggerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTriggerResponseWithDefaults() *ListTriggerResponse {
	this := ListTriggerResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListTriggerResponse) GetItems() []FpTrigger {
	if o == nil || IsNil(o.Items) {
		var ret []FpTrigger
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTriggerResponse) GetItemsOk() ([]FpTrigger, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ListTriggerResponse) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []FpTrigger and assigns it to the Items field.
func (o *ListTriggerResponse) SetItems(v []FpTrigger) {
	o.Items = v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *ListTriggerResponse) GetNextToken() string {
	if o == nil || IsNil(o.NextToken) {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTriggerResponse) GetNextTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextToken) {
		return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *ListTriggerResponse) HasNextToken() bool {
	if o != nil && !IsNil(o.NextToken) {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *ListTriggerResponse) SetNextToken(v string) {
	o.NextToken = &v
}

func (o ListTriggerResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTriggerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.NextToken) {
		toSerialize["next_token"] = o.NextToken
	}
	return toSerialize, nil
}

type NullableListTriggerResponse struct {
	value *ListTriggerResponse
	isSet bool
}

func (v NullableListTriggerResponse) Get() *ListTriggerResponse {
	return v.value
}

func (v *NullableListTriggerResponse) Set(val *ListTriggerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListTriggerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListTriggerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTriggerResponse(val *ListTriggerResponse) *NullableListTriggerResponse {
	return &NullableListTriggerResponse{value: val, isSet: true}
}

func (v NullableListTriggerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTriggerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


