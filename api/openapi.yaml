openapi: 3.0.1
info:
  contact:
    email: info@flowpipe.io
    name: Flowpipe
    url: http://www.flowpipe.io
  description: Flowpipe is workflow and pipelines for DevSecOps.
  license:
    name: AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  title: Flowpipe
  version: 0.1.0
servers:
- url: https://localhost/api/v0
paths:
  /integration:
    get:
      description: Lists integrations
      operationId: integration_list
      parameters:
      - description: "The max number of items to fetch per page of data, subject to\
          \ a min and max of 1 and 100 respectively. If not specified will default\
          \ to 25."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "When list results are truncated, next_token will be returned,\
          \ which is a cursor to fetch the next page of data. Pass next_token to the\
          \ subsequent list request to fetch the next page of data."
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIntegrationResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: List integrations
      tags:
      - Integration
  /integration/{integration_name}:
    get:
      description: Get integration
      operationId: integration_get
      parameters:
      - description: The name of the integration
        explode: false
        in: path
        name: integration_name
        required: true
        schema:
          format: "^[a-z_]{0,32}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FpIntegration'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: Get integration
      tags:
      - Integration
  /mod/{mod_name}:
    get:
      description: Get mod
      operationId: mod_get
      parameters:
      - description: The name of the mod
        explode: false
        in: path
        name: mod_name
        required: true
        schema:
          format: "^[a-z]{0,32}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mod'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: Get mod
      tags:
      - Mod
  /notifier:
    get:
      description: Lists notifiers
      operationId: notifier_list
      parameters:
      - description: "The max number of items to fetch per page of data, subject to\
          \ a min and max of 1 and 100 respectively. If not specified will default\
          \ to 25."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "When list results are truncated, next_token will be returned,\
          \ which is a cursor to fetch the next page of data. Pass next_token to the\
          \ subsequent list request to fetch the next page of data."
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotifierResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: List notifiers
      tags:
      - Notifier
  /notifier/{notifier_name}:
    get:
      description: Get notifier
      operationId: notifier_get
      parameters:
      - description: Notifier name
        explode: false
        in: path
        name: notifier_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FpNotifier'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: Get notifier
      tags:
      - Notifier
  /pipeline:
    get:
      description: Lists pipelines
      operationId: pipeline_list
      parameters:
      - description: "The max number of items to fetch per page of data, subject to\
          \ a min and max of 1 and 100 respectively. If not specified will default\
          \ to 25."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "When list results are truncated, next_token will be returned,\
          \ which is a cursor to fetch the next page of data. Pass next_token to the\
          \ subsequent list request to fetch the next page of data."
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelineResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: List pipelines
      tags:
      - Pipeline
  /pipeline/{pipeline_name}:
    get:
      description: Get pipeline
      operationId: pipeline_get
      parameters:
      - description: The name of the pipeline
        explode: false
        in: path
        name: pipeline_name
        required: true
        schema:
          format: "^[a-z_]{0,32}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FpPipeline'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: Get pipeline
      tags:
      - Pipeline
  /pipeline/{pipeline_name}/command:
    post:
      description: Execute a pipeline command
      operationId: pipeline_command
      parameters:
      - description: The name of the pipeline
        explode: false
        in: path
        name: pipeline_name
        required: true
        schema:
          format: "^[a-z_]{0,32}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CmdPipeline'
        description: Pipeline command.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineExecutionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: Execute a pipeline command
      tags:
      - Pipeline
      x-codegen-request-body-name: request
  /process:
    get:
      description: Lists processs
      operationId: process_list
      parameters:
      - description: "The max number of items to fetch per page of data, subject to\
          \ a min and max of 1 and 100 respectively. If not specified will default\
          \ to 25."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "When list results are truncated, next_token will be returned,\
          \ which is a cursor to fetch the next page of data. Pass next_token to the\
          \ subsequent list request to fetch the next page of data."
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProcessResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: List processs
      tags:
      - Process
  /process/{process_id}:
    get:
      description: Get process
      operationId: process_get
      parameters:
      - description: The name of the process
        explode: false
        in: path
        name: process_id
        required: true
        schema:
          format: "^[a-z]{0,32}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: Get process
      tags:
      - Process
  /process/{process_id}/execution:
    get:
      description: Get process execution
      operationId: process_get_execution
      parameters:
      - description: The name of the process
        explode: false
        in: path
        name: process_id
        required: true
        schema:
          format: "^[a-z]{0,32}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/execution.Execution'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: Get process execution
      tags:
      - Process
  /process/{process_id}/log/process.json:
    get:
      description: Get process log
      operationId: process_get_log
      parameters:
      - description: The id of the process
        explode: false
        in: path
        name: process_id
        required: true
        schema:
          format: "^[a-z]{0,32}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProcessLogJSONResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: Get process log
      tags:
      - Process
  /trigger:
    get:
      description: Lists triggers
      operationId: trigger_list
      parameters:
      - description: "The max number of items to fetch per page of data, subject to\
          \ a min and max of 1 and 100 respectively. If not specified will default\
          \ to 25."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "When list results are truncated, next_token will be returned,\
          \ which is a cursor to fetch the next page of data. Pass next_token to the\
          \ subsequent list request to fetch the next page of data."
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTriggerResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: List triggers
      tags:
      - Trigger
  /trigger/{trigger_name}:
    get:
      description: Get trigger
      operationId: trigger_get
      parameters:
      - description: The name of the trigger
        explode: false
        in: path
        name: trigger_name
        required: true
        schema:
          format: "^[a-z]{0,32}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FpTrigger'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: Get trigger
      tags:
      - Trigger
  /trigger/{trigger_name}/command:
    post:
      description: Execute a trigger command
      operationId: trigger_command
      parameters:
      - description: The name of the trigger
        explode: false
        in: path
        name: trigger_name
        required: true
        schema:
          format: "^[a-z_]{0,32}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CmdTrigger'
        description: Trigger command.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerExecutionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: Execute a trigger command
      tags:
      - Trigger
      x-codegen-request-body-name: request
  /variable:
    get:
      description: Lists variables
      operationId: variable_list
      parameters:
      - description: "The max number of items to fetch per page of data, subject to\
          \ a min and max of 1 and 100 respectively. If not specified will default\
          \ to 25."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "When list results are truncated, next_token will be returned,\
          \ which is a cursor to fetch the next page of data. Pass next_token to the\
          \ subsequent list request to fetch the next page of data."
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVariableResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: List variables
      tags:
      - Variable
  /variable/{variable_name}:
    get:
      description: Get variable
      operationId: variable_get
      parameters:
      - description: The name of the variable
        explode: false
        in: path
        name: variable_name
        required: true
        schema:
          format: "^[a-z]{0,32}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FpVariable'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/perr.ErrorModel'
          description: Internal Server Error
      summary: Get variable
      tags:
      - Variable
components:
  schemas:
    CmdPipeline:
      example:
        args:
          key: ""
        execution_id: execution_id
        args_string:
          key: args_string
        execution_mode: synchronous
        wait_retry: 0
        command: run
      properties:
        args:
          additionalProperties: true
          type: object
        args_string:
          additionalProperties:
            type: string
          type: object
        command:
          enum:
          - run
          type: string
        execution_id:
          description: "Sepcify execution id, if not specified, a new execution id\
            \ will be created"
          type: string
        execution_mode:
          enum:
          - synchronous
          - asynchronous
          type: string
        wait_retry:
          type: integer
      required:
      - command
      type: object
    CmdTrigger:
      example:
        args:
          key: ""
        execution_id: execution_id
        args_string:
          key: args_string
        execution_mode: synchronous
        wait_retry: 0
        command: run
      properties:
        args:
          additionalProperties: true
          type: object
        args_string:
          additionalProperties:
            type: string
          type: object
        command:
          enum:
          - run
          - reset
          type: string
        execution_id:
          description: "Sepcify execution id, if not specified, a new execution id\
            \ will be created"
          type: string
        execution_mode:
          enum:
          - synchronous
          - asynchronous
          type: string
        wait_retry:
          type: integer
      required:
      - command
      type: object
    FlowpipeRequire:
      example:
        min_version: min_version
      properties:
        min_version:
          type: string
      type: object
    FlowpipeResponseMetadata:
      example:
        pipeline: pipeline
        execution_id: execution_id
        pipeline_execution_id: pipeline_execution_id
        last_loaded: last_loaded
        is_stale: true
        type: type
        status: status
      properties:
        execution_id:
          type: string
        is_stale:
          type: boolean
        last_loaded:
          type: string
        pipeline:
          type: string
        pipeline_execution_id:
          type: string
        status:
          type: string
        type:
          type: string
      type: object
    FlowpipeTriggerResponseMetadata:
      example:
        process_id: process_id
        last_loaded: last_loaded
        name: name
        is_stale: true
        type: type
      properties:
        is_stale:
          type: boolean
        last_loaded:
          type: string
        name:
          type: string
        process_id:
          type: string
        type:
          type: string
      type: object
    FpIntegration:
      example:
        cc:
        - cc
        - cc
        bcc:
        - bcc
        - bcc
        signing_secret: signing_secret
        webhook_url: webhook_url
        smtp_tls: smtp_tls
        file_name: file_name
        subject: subject
        channel: channel
        description: description
        end_line_number: 0
        smtp_host: smtp_host
        smtps_port: 1
        start_line_number: 5
        title: title
        type: type
        url: url
        smtp_username: smtp_username
        token: token
        smtp_password: smtp_password
        smtp_port: 6
        name: name
        from: from
        to:
        - to
        - to
      properties:
        bcc:
          items:
            type: string
          type: array
        cc:
          items:
            type: string
          type: array
        channel:
          type: string
        description:
          type: string
        end_line_number:
          type: integer
        file_name:
          type: string
        from:
          type: string
        name:
          type: string
        signing_secret:
          type: string
        smtp_host:
          description: email
          type: string
        smtp_password:
          type: string
        smtp_port:
          type: integer
        smtp_tls:
          type: string
        smtp_username:
          type: string
        smtps_port:
          type: integer
        start_line_number:
          type: integer
        subject:
          type: string
        title:
          type: string
        to:
          items:
            type: string
          type: array
        token:
          description: slack
          type: string
        type:
          type: string
        url:
          type: string
        webhook_url:
          description: slack & msteams
          type: string
      type: object
    FpNotifier:
      example:
        file_name: file_name
        name: name
        description: description
        notifies:
        - cc:
          - cc
          - cc
          bcc:
          - bcc
          - bcc
          subject: subject
          channel: channel
          integration: integration
          description: description
          to:
          - to
          - to
          title: title
        - cc:
          - cc
          - cc
          bcc:
          - bcc
          - bcc
          subject: subject
          channel: channel
          integration: integration
          description: description
          to:
          - to
          - to
          title: title
        end_line_number: 0
        start_line_number: 6
        title: title
      properties:
        description:
          type: string
        end_line_number:
          type: integer
        file_name:
          type: string
        name:
          type: string
        notifies:
          items:
            $ref: '#/components/schemas/FpNotify'
          type: array
        start_line_number:
          type: integer
        title:
          type: string
      type: object
    FpNotify:
      example:
        cc:
        - cc
        - cc
        bcc:
        - bcc
        - bcc
        subject: subject
        channel: channel
        integration: integration
        description: description
        to:
        - to
        - to
        title: title
      properties:
        bcc:
          items:
            type: string
          type: array
        cc:
          items:
            type: string
          type: array
        channel:
          type: string
        description:
          type: string
        integration:
          type: string
        subject:
          type: string
        title:
          type: string
        to:
          items:
            type: string
          type: array
      type: object
    FpPipeline:
      example:
        outputs:
        - credential_depends_on:
          - credential_depends_on
          - credential_depends_on
          depends_on:
          - depends_on
          - depends_on
          name: name
          description: description
          Range:
            filename: filename
            start: null
          value: "{}"
          resolved: true
        - credential_depends_on:
          - credential_depends_on
          - credential_depends_on
          depends_on:
          - depends_on
          - depends_on
          name: name
          description: description
          Range:
            filename: filename
            start: null
          value: "{}"
          resolved: true
        mod: mod
        file_name: file_name
        documentation: documentation
        description: description
        end_line_number: 0
        params:
        - default: "{}"
          name: name
          description: description
          optional: true
          type: type
        - default: "{}"
          name: name
          description: description
          optional: true
          type: type
        start_line_number: 6
        title: title
        steps:
        - "{}"
        - "{}"
        tags:
          key: tags
        root_mod: root_mod
        name: name
      properties:
        description:
          type: string
        documentation:
          type: string
        end_line_number:
          type: integer
        file_name:
          type: string
        mod:
          type: string
        name:
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/modconfig.PipelineOutput'
          type: array
        params:
          items:
            $ref: '#/components/schemas/FpPipelineParam'
          type: array
        root_mod:
          type: string
        start_line_number:
          type: integer
        steps:
          items:
            type: object
          type: array
        tags:
          additionalProperties:
            type: string
          type: object
        title:
          type: string
      type: object
    FpPipelineParam:
      example:
        default: "{}"
        name: name
        description: description
        optional: true
        type: type
      properties:
        default:
          type: object
        description:
          type: string
        name:
          type: string
        optional:
          type: boolean
        type:
          type: string
      type: object
    FpTrigger:
      example:
        file_name: file_name
        documentation: documentation
        query: query
        description: description
        end_line_number: 0
        start_line_number: 6
        title: title
        type: type
        enabled: true
        url: url
        tags:
          key: tags
        schedule: schedule
        pipelines:
        - pipeline: pipeline
          capture_group: capture_group
        - pipeline: pipeline
          capture_group: capture_group
        name: name
      properties:
        description:
          type: string
        documentation:
          type: string
        enabled:
          type: boolean
        end_line_number:
          type: integer
        file_name:
          type: string
        name:
          type: string
        pipelines:
          items:
            $ref: '#/components/schemas/FpTriggerPipeline'
          type: array
        query:
          type: string
        schedule:
          type: string
        start_line_number:
          type: integer
        tags:
          additionalProperties:
            type: string
          type: object
        title:
          type: string
        type:
          type: string
        url:
          type: string
      type: object
    FpTriggerPipeline:
      example:
        pipeline: pipeline
        capture_group: capture_group
      properties:
        capture_group:
          type: string
        pipeline:
          type: string
      type: object
    FpVariable:
      example:
        default: ""
        name: name
        description: description
        type: type
        value: ""
        mod_name: mod_name
      properties:
        default:
          type: AnyType
        description:
          type: string
        mod_name:
          type: string
        name:
          type: string
        type:
          type: string
        value:
          type: AnyType
      type: object
    ListIntegrationResponse:
      example:
        next_token: next_token
        items:
        - cc:
          - cc
          - cc
          bcc:
          - bcc
          - bcc
          signing_secret: signing_secret
          webhook_url: webhook_url
          smtp_tls: smtp_tls
          file_name: file_name
          subject: subject
          channel: channel
          description: description
          end_line_number: 0
          smtp_host: smtp_host
          smtps_port: 1
          start_line_number: 5
          title: title
          type: type
          url: url
          smtp_username: smtp_username
          token: token
          smtp_password: smtp_password
          smtp_port: 6
          name: name
          from: from
          to:
          - to
          - to
        - cc:
          - cc
          - cc
          bcc:
          - bcc
          - bcc
          signing_secret: signing_secret
          webhook_url: webhook_url
          smtp_tls: smtp_tls
          file_name: file_name
          subject: subject
          channel: channel
          description: description
          end_line_number: 0
          smtp_host: smtp_host
          smtps_port: 1
          start_line_number: 5
          title: title
          type: type
          url: url
          smtp_username: smtp_username
          token: token
          smtp_password: smtp_password
          smtp_port: 6
          name: name
          from: from
          to:
          - to
          - to
      properties:
        items:
          items:
            $ref: '#/components/schemas/FpIntegration'
          type: array
        next_token:
          type: string
      type: object
    ListNotifierResponse:
      example:
        next_token: next_token
        items:
        - file_name: file_name
          name: name
          description: description
          notifies:
          - cc:
            - cc
            - cc
            bcc:
            - bcc
            - bcc
            subject: subject
            channel: channel
            integration: integration
            description: description
            to:
            - to
            - to
            title: title
          - cc:
            - cc
            - cc
            bcc:
            - bcc
            - bcc
            subject: subject
            channel: channel
            integration: integration
            description: description
            to:
            - to
            - to
            title: title
          end_line_number: 0
          start_line_number: 6
          title: title
        - file_name: file_name
          name: name
          description: description
          notifies:
          - cc:
            - cc
            - cc
            bcc:
            - bcc
            - bcc
            subject: subject
            channel: channel
            integration: integration
            description: description
            to:
            - to
            - to
            title: title
          - cc:
            - cc
            - cc
            bcc:
            - bcc
            - bcc
            subject: subject
            channel: channel
            integration: integration
            description: description
            to:
            - to
            - to
            title: title
          end_line_number: 0
          start_line_number: 6
          title: title
      properties:
        items:
          items:
            $ref: '#/components/schemas/FpNotifier'
          type: array
        next_token:
          type: string
      type: object
    ListPipelineResponse:
      example:
        next_token: next_token
        items:
        - outputs:
          - credential_depends_on:
            - credential_depends_on
            - credential_depends_on
            depends_on:
            - depends_on
            - depends_on
            name: name
            description: description
            Range:
              filename: filename
              start: null
            value: "{}"
            resolved: true
          - credential_depends_on:
            - credential_depends_on
            - credential_depends_on
            depends_on:
            - depends_on
            - depends_on
            name: name
            description: description
            Range:
              filename: filename
              start: null
            value: "{}"
            resolved: true
          mod: mod
          file_name: file_name
          documentation: documentation
          description: description
          end_line_number: 0
          params:
          - default: "{}"
            name: name
            description: description
            optional: true
            type: type
          - default: "{}"
            name: name
            description: description
            optional: true
            type: type
          start_line_number: 6
          title: title
          steps:
          - "{}"
          - "{}"
          tags:
            key: tags
          root_mod: root_mod
          name: name
        - outputs:
          - credential_depends_on:
            - credential_depends_on
            - credential_depends_on
            depends_on:
            - depends_on
            - depends_on
            name: name
            description: description
            Range:
              filename: filename
              start: null
            value: "{}"
            resolved: true
          - credential_depends_on:
            - credential_depends_on
            - credential_depends_on
            depends_on:
            - depends_on
            - depends_on
            name: name
            description: description
            Range:
              filename: filename
              start: null
            value: "{}"
            resolved: true
          mod: mod
          file_name: file_name
          documentation: documentation
          description: description
          end_line_number: 0
          params:
          - default: "{}"
            name: name
            description: description
            optional: true
            type: type
          - default: "{}"
            name: name
            description: description
            optional: true
            type: type
          start_line_number: 6
          title: title
          steps:
          - "{}"
          - "{}"
          tags:
            key: tags
          root_mod: root_mod
          name: name
      properties:
        items:
          items:
            $ref: '#/components/schemas/FpPipeline'
          type: array
        next_token:
          type: string
      type: object
    ListProcessLogJSONResponse:
      example:
        next_token: next_token
        items:
        - process_id: process_id
          struct_version: struct_version
          level: level
          created_at: created_at
          detail: "{}"
          id: id
          message: message
        - process_id: process_id
          struct_version: struct_version
          level: level
          created_at: created_at
          detail: "{}"
          id: id
          message: message
      properties:
        items:
          items:
            $ref: '#/components/schemas/event.EventLogImpl'
          type: array
        next_token:
          type: string
      type: object
    ListProcessResponse:
      example:
        next_token: next_token
        items:
        - pipeline: pipeline
          execution_id: execution_id
          created_at: created_at
          status: status
        - pipeline: pipeline
          execution_id: execution_id
          created_at: created_at
          status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/Process'
          type: array
        next_token:
          type: string
      type: object
    ListTriggerResponse:
      example:
        next_token: next_token
        items:
        - file_name: file_name
          documentation: documentation
          query: query
          description: description
          end_line_number: 0
          start_line_number: 6
          title: title
          type: type
          enabled: true
          url: url
          tags:
            key: tags
          schedule: schedule
          pipelines:
          - pipeline: pipeline
            capture_group: capture_group
          - pipeline: pipeline
            capture_group: capture_group
          name: name
        - file_name: file_name
          documentation: documentation
          query: query
          description: description
          end_line_number: 0
          start_line_number: 6
          title: title
          type: type
          enabled: true
          url: url
          tags:
            key: tags
          schedule: schedule
          pipelines:
          - pipeline: pipeline
            capture_group: capture_group
          - pipeline: pipeline
            capture_group: capture_group
          name: name
      properties:
        items:
          items:
            $ref: '#/components/schemas/FpTrigger'
          type: array
        next_token:
          type: string
      type: object
    ListVariableResponse:
      example:
        next_token: next_token
        items:
        - default: ""
          name: name
          description: description
          type: type
          value: ""
          mod_name: mod_name
        - default: ""
          name: name
          description: description
          type: type
          value: ""
          mod_name: mod_name
      properties:
        items:
          items:
            $ref: '#/components/schemas/FpVariable'
          type: array
        next_token:
          type: string
      type: object
    Mod:
      example:
        color: color
        documentation: documentation
        name: name
        description: description
        require:
          mods:
          - name: name
            version: version
          - name: name
            version: version
          flowpipe:
            min_version: min_version
        categories:
        - categories
        - categories
        title: title
        opengraph:
          description: description
          title: title
      properties:
        categories:
          items:
            type: string
          type: array
        color:
          type: string
        description:
          type: string
        documentation:
          type: string
        name:
          type: string
        opengraph:
          $ref: '#/components/schemas/OpenGraph'
        require:
          $ref: '#/components/schemas/Require'
        title:
          type: string
      type: object
    ModVersionConstraint:
      example:
        name: name
        version: version
      properties:
        name:
          description: "the fully qualified mod name, e.g. github.com/turbot/mod1"
          type: string
        version:
          type: string
      type: object
    OpenGraph:
      example:
        description: description
        title: title
      properties:
        description:
          description: "The opengraph description (og:description) of the mod, for\
            \ use in social media applications"
          type: string
        title:
          type: string
      type: object
    PipelineExecutionResponse:
      example:
        flowpipe:
          pipeline: pipeline
          execution_id: execution_id
          pipeline_execution_id: pipeline_execution_id
          last_loaded: last_loaded
          is_stale: true
          type: type
          status: status
        results:
          key: ""
        errors:
        - pipeline: pipeline
          pipeline_execution_id: pipeline_execution_id
          step_execution_id: step_execution_id
          step: step
          error:
            instance: instance
            validation_errors:
            - location: location
              message: message
            - location: location
              message: message
            detail: detail
            title: title
            type: type
            status: 0
        - pipeline: pipeline
          pipeline_execution_id: pipeline_execution_id
          step_execution_id: step_execution_id
          step: step
          error:
            instance: instance
            validation_errors:
            - location: location
              message: message
            - location: location
              message: message
            detail: detail
            title: title
            type: type
            status: 0
      properties:
        errors:
          items:
            $ref: '#/components/schemas/modconfig.StepError'
          type: array
        flowpipe:
          $ref: '#/components/schemas/FlowpipeResponseMetadata'
        results:
          additionalProperties: true
          type: object
      type: object
    Process:
      example:
        pipeline: pipeline
        execution_id: execution_id
        created_at: created_at
        status: status
      properties:
        created_at:
          type: string
        execution_id:
          type: string
        pipeline:
          type: string
        status:
          type: string
      type: object
    Require:
      example:
        mods:
        - name: name
          version: version
        - name: name
          version: version
        flowpipe:
          min_version: min_version
      properties:
        flowpipe:
          $ref: '#/components/schemas/FlowpipeRequire'
        mods:
          items:
            $ref: '#/components/schemas/ModVersionConstraint'
          type: array
      type: object
    TriggerExecutionResponse:
      example:
        flowpipe:
          process_id: process_id
          last_loaded: last_loaded
          name: name
          is_stale: true
          type: type
        results:
          key: ""
      properties:
        flowpipe:
          $ref: '#/components/schemas/FlowpipeTriggerResponseMetadata'
        results:
          additionalProperties: true
          type: object
      type: object
    event.EventLogImpl:
      example:
        process_id: process_id
        struct_version: struct_version
        level: level
        created_at: created_at
        detail: "{}"
        id: id
        message: message
      properties:
        created_at:
          type: string
        detail:
          type: object
        id:
          type: string
        level:
          type: string
        message:
          type: string
        process_id:
          type: string
        struct_version:
          type: string
      type: object
    execution.Execution:
      example:
        pipeline_executions:
          key:
            args: "{}"
            start_time: start_time
            step_status:
              key:
                key:
                  loop_hold: true
                  error_hold: true
                  queued:
                    key: true
                  finished:
                    key: true
                  initializing: true
                  started:
                    key: true
                  failed:
                    key: true
                  step_executions:
                  - pipeline_execution_id: pipeline_execution_id
                    end_time: end_time
                    output: null
                    step_for_each: null
                    step_loop:
                      input:
                        key: ""
                      loop_completed: true
                      index: 0
                    input: "{}"
                    start_time: start_time
                    step_retry:
                      input:
                        key: ""
                      count: 6
                      retry_completed: true
                    name: name
                    id: id
                    next_step_action: null
                    step_output:
                      key: ""
                    status: status
                  - pipeline_execution_id: pipeline_execution_id
                    end_time: end_time
                    output: null
                    step_for_each: null
                    step_loop:
                      input:
                        key: ""
                      loop_completed: true
                      index: 0
                    input: "{}"
                    start_time: start_time
                    step_retry:
                      input:
                        key: ""
                      count: 6
                      retry_completed: true
                    name: name
                    id: id
                    next_step_action: null
                    step_output:
                      key: ""
                    status: status
                  overral_state: overral_state
            parent_step_execution_id: parent_step_execution_id
            pipeline_output:
              key: ""
            end_time: end_time
            name: name
            id: id
            parent_execution_id: parent_execution_id
            errors:
            - pipeline: pipeline
              pipeline_execution_id: pipeline_execution_id
              step_execution_id: step_execution_id
              step: step
              error:
                instance: instance
                validation_errors:
                - location: location
                  message: message
                - location: location
                  message: message
                detail: detail
                title: title
                type: type
                status: 0
            - pipeline: pipeline
              pipeline_execution_id: pipeline_execution_id
              step_execution_id: step_execution_id
              step: step
              error:
                instance: instance
                validation_errors:
                - location: location
                  message: message
                - location: location
                  message: message
                detail: detail
                title: title
                type: type
                status: 0
            status: status
        id: id
      properties:
        id:
          description: Unique identifier for this execution.
          type: string
        pipeline_executions:
          additionalProperties:
            $ref: '#/components/schemas/execution.PipelineExecution'
          description: |-
            Pipelines triggered by the execution. Even if the pipelines are nested,
            we maintain a flat list of all pipelines for easy lookup and querying.
          type: object
      type: object
    execution.PipelineExecution:
      example:
        args: "{}"
        start_time: start_time
        step_status:
          key:
            key:
              loop_hold: true
              error_hold: true
              queued:
                key: true
              finished:
                key: true
              initializing: true
              started:
                key: true
              failed:
                key: true
              step_executions:
              - pipeline_execution_id: pipeline_execution_id
                end_time: end_time
                output: null
                step_for_each: null
                step_loop:
                  input:
                    key: ""
                  loop_completed: true
                  index: 0
                input: "{}"
                start_time: start_time
                step_retry:
                  input:
                    key: ""
                  count: 6
                  retry_completed: true
                name: name
                id: id
                next_step_action: null
                step_output:
                  key: ""
                status: status
              - pipeline_execution_id: pipeline_execution_id
                end_time: end_time
                output: null
                step_for_each: null
                step_loop:
                  input:
                    key: ""
                  loop_completed: true
                  index: 0
                input: "{}"
                start_time: start_time
                step_retry:
                  input:
                    key: ""
                  count: 6
                  retry_completed: true
                name: name
                id: id
                next_step_action: null
                step_output:
                  key: ""
                status: status
              overral_state: overral_state
        parent_step_execution_id: parent_step_execution_id
        pipeline_output:
          key: ""
        end_time: end_time
        name: name
        id: id
        parent_execution_id: parent_execution_id
        errors:
        - pipeline: pipeline
          pipeline_execution_id: pipeline_execution_id
          step_execution_id: step_execution_id
          step: step
          error:
            instance: instance
            validation_errors:
            - location: location
              message: message
            - location: location
              message: message
            detail: detail
            title: title
            type: type
            status: 0
        - pipeline: pipeline
          pipeline_execution_id: pipeline_execution_id
          step_execution_id: step_execution_id
          step: step
          error:
            instance: instance
            validation_errors:
            - location: location
              message: message
            - location: location
              message: message
            detail: detail
            title: title
            type: type
            status: 0
        status: status
      properties:
        args:
          allOf:
          - $ref: '#/components/schemas/modconfig.Input'
          description: The input to the pipeline
          type: object
        end_time:
          type: string
        errors:
          description: All errors from the step execution + any errors that can be
            added to the pipeline execution manually
          items:
            $ref: '#/components/schemas/modconfig.StepError'
          type: array
        id:
          description: Unique identifier for this pipeline execution
          type: string
        name:
          description: The name of the pipeline
          type: string
        parent_execution_id:
          type: string
        parent_step_execution_id:
          description: "If this is a child pipeline, then track it's parent"
          type: string
        pipeline_output:
          additionalProperties: true
          description: The output of the pipeline
          type: object
        start_time:
          type: string
        status:
          description: "The status of the pipeline execution: queued, planned, started,\
            \ completed, failed"
          type: string
        step_status:
          additionalProperties:
            additionalProperties:
              $ref: '#/components/schemas/execution.StepStatus'
            type: object
          description: "Status of each step on a per-step index basis. Used to determine\
            \ if dependencies\nhave been met etc. Note that each step may have multiple\
            \ executions, the status\nof which are not tracked here.\ndependencies\
            \ have been met, etc.\n\nThe Step Status used to be per-step, however\
            \ the addition of for_each means that we now need to expand this\ntracking\
            \ to include the \"index\" of the step\n\nfor_each have 2 type of results:\
            \ list or map, however in Flowpipe they are both treated as a map,\nthe\
            \ list is simply a map that the key happens to be a string of \"0\", \"\
            1\", \"2\"\n\n\t\tThe data structure of StepStatus is as follow:\n\t\t\
            {\n\t\t\t\"echo.echo\": {\n\t\t\t\t\"0\": {\n\t\t\t\t\txyz\n\t\t\t\t},\n\
            \t\t\t\t\"1\": {\n\t\t\t\t\txyz\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"http.one\"\
            : {\n\t\t\t\t\"foo\": {\n\t\t\t\t\tzzz\n\t\t\t\t},\n\t\t\t\t\"bar\": {\n\
            \t\t\t\t\tyyy\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\techo.echo has a for_each\
            \ which is a list, so the key is the index of the list\n\n\t\thttp.one\
            \ has a for_each which is a map, so the key is the key of the map\n\n\t\
            \tLOOP\n\n\t\tLoop will be recorded in StepStatus.StepExecution, it's\
            \ an array\n\t\t*"
          type: object
      type: object
    execution.StepExecution:
      example:
        pipeline_execution_id: pipeline_execution_id
        end_time: end_time
        output: null
        step_for_each: null
        step_loop:
          input:
            key: ""
          loop_completed: true
          index: 0
        input: "{}"
        start_time: start_time
        step_retry:
          input:
            key: ""
          count: 6
          retry_completed: true
        name: name
        id: id
        next_step_action: null
        step_output:
          key: ""
        status: status
      properties:
        end_time:
          type: string
        id:
          type: string
        input:
          allOf:
          - $ref: '#/components/schemas/modconfig.Input'
          description: Input to the step
          type: object
        name:
          description: The name of the step in the pipeline definition
          type: string
        next_step_action:
          $ref: '#/components/schemas/modconfig.NextStepAction'
        output:
          $ref: '#/components/schemas/execution_StepExecution_output'
        pipeline_execution_id:
          description: Unique identifier for this step execution
          type: string
        start_time:
          type: string
        status:
          description: "The status of the step execution: \"started\", \"finished\"\
            , \"failed\", \"skipped\""
          type: string
        step_for_each:
          $ref: '#/components/schemas/execution_StepExecution_step_for_each'
        step_loop:
          $ref: '#/components/schemas/modconfig.StepLoop'
        step_output:
          additionalProperties: true
          description: "The output from the Step's output block:\noutput \"foo\" {\n\
            \   value = <xxx>\n\t}"
          type: object
        step_retry:
          $ref: '#/components/schemas/modconfig.StepRetry'
      type: object
    execution.StepStatus:
      example:
        loop_hold: true
        error_hold: true
        queued:
          key: true
        finished:
          key: true
        initializing: true
        started:
          key: true
        failed:
          key: true
        step_executions:
        - pipeline_execution_id: pipeline_execution_id
          end_time: end_time
          output: null
          step_for_each: null
          step_loop:
            input:
              key: ""
            loop_completed: true
            index: 0
          input: "{}"
          start_time: start_time
          step_retry:
            input:
              key: ""
            count: 6
            retry_completed: true
          name: name
          id: id
          next_step_action: null
          step_output:
            key: ""
          status: status
        - pipeline_execution_id: pipeline_execution_id
          end_time: end_time
          output: null
          step_for_each: null
          step_loop:
            input:
              key: ""
            loop_completed: true
            index: 0
          input: "{}"
          start_time: start_time
          step_retry:
            input:
              key: ""
            count: 6
            retry_completed: true
          name: name
          id: id
          next_step_action: null
          step_output:
            key: ""
          status: status
        overral_state: overral_state
      properties:
        error_hold:
          description: Indicates that a step is in retry loop so we don't mark it
            as failed
          type: boolean
        failed:
          additionalProperties:
            type: boolean
          description: Step executions that are failed.
          type: object
        finished:
          additionalProperties:
            type: boolean
          description: Step executions that are finished.
          type: object
        initializing:
          description: |-
            When the step is initializing it doesn't yet have any executions.
            We track it as initializing until the first execution is queued.
          type: boolean
        loop_hold:
          description: |-
            Both LoopHold and ErrorHold must be resolved **before** the "finish" event is called, i.e. it needs to be calculated at the
            end of "step start command" and "step pipeline finish" command.

            It can't be calculated at the "finish" event because it's already too late. If the planner see that it has an finish
            event without either a LoopHold or ErrorHold, it will mark the step as completed or failed

            Indicates that step is in a loop so we don't mark it as finished
          type: boolean
        overral_state:
          type: string
        queued:
          additionalProperties:
            type: boolean
          description: Step executions that are queued.
          type: object
        started:
          additionalProperties:
            type: boolean
          description: Step executions that are started.
          type: object
        step_executions:
          description: |-
            There's the step execution in execution, this is the same but in a list for a given step status
            The element in this slice should point to the same element in the StepExecutions map (in PipelineExecution)
          items:
            $ref: '#/components/schemas/execution.StepExecution'
          type: array
      type: object
    hcl.Pos:
      properties:
        byte:
          description: |-
            Byte is the byte offset into the file where the indicated character
            begins. This is a zero-based offset to the first byte of the first
            UTF-8 codepoint sequence in the character, and thus gives a position
            that can be resolved _without_ awareness of Unicode characters.
          type: integer
        column:
          description: |-
            Column is the source code column where this position points, in
            unicode characters, with counting starting at 1.

            Column counts characters as they appear visually, so for example a
            latin letter with a combining diacritic mark counts as one character.
            This is intended for rendering visual markers against source code in
            contexts where these diacritics would be rendered in a single character
            cell. Technically speaking, Column is counting grapheme clusters as
            used in unicode normalization.
          type: integer
        line:
          description: |-
            Line is the source code line where this position points. Lines are
            counted starting at 1 and incremented for each newline character
            encountered.
          type: integer
      type: object
    hcl.Range:
      example:
        filename: filename
        start: null
      properties:
        filename:
          description: |-
            Filename is the name of the file into which this range's positions
            point.
          type: string
        start:
          $ref: '#/components/schemas/hcl_Range_start'
      type: object
    modconfig.Input:
      additionalProperties: true
      type: object
    modconfig.NextStepAction:
      enum:
      - start
      - inaccessible
      - skip
      type: string
      x-enum-varnames:
      - NextStepActionStart
      - NextStepActionInaccessible
      - NextStepActionSkip
    modconfig.Output:
      properties:
        data:
          additionalProperties: true
          type: object
        errors:
          items:
            $ref: '#/components/schemas/modconfig.StepError'
          type: array
        failure_mode:
          type: string
        flowpipe:
          additionalProperties: true
          description: "Flowpipe metadata, contains started_at, finished_at"
          type: object
        status:
          type: string
      type: object
    modconfig.OutputData:
      additionalProperties: true
      type: object
    modconfig.PipelineOutput:
      example:
        credential_depends_on:
        - credential_depends_on
        - credential_depends_on
        depends_on:
        - depends_on
        - depends_on
        name: name
        description: description
        Range:
          filename: filename
          start: null
        value: "{}"
        resolved: true
      properties:
        Range:
          $ref: '#/components/schemas/hcl.Range'
        credential_depends_on:
          items:
            type: string
          type: array
        depends_on:
          items:
            type: string
          type: array
        description:
          type: string
        name:
          type: string
        resolved:
          type: boolean
        value:
          type: object
      type: object
    modconfig.StepError:
      example:
        pipeline: pipeline
        pipeline_execution_id: pipeline_execution_id
        step_execution_id: step_execution_id
        step: step
        error:
          instance: instance
          validation_errors:
          - location: location
            message: message
          - location: location
            message: message
          detail: detail
          title: title
          type: type
          status: 0
      properties:
        error:
          $ref: '#/components/schemas/perr.ErrorModel'
        pipeline:
          type: string
        pipeline_execution_id:
          type: string
        step:
          type: string
        step_execution_id:
          type: string
      type: object
    modconfig.StepForEach:
      properties:
        for_each_step:
          type: boolean
        key:
          type: string
        output:
          $ref: '#/components/schemas/modconfig.Output'
        total_count:
          type: integer
      required:
      - key
      - total_count
      type: object
    modconfig.StepLoop:
      example:
        input:
          key: ""
        loop_completed: true
        index: 0
      properties:
        index:
          type: integer
        input:
          additionalProperties: true
          type: object
        loop_completed:
          type: boolean
      required:
      - index
      type: object
    modconfig.StepRetry:
      example:
        input:
          key: ""
        count: 6
        retry_completed: true
      properties:
        count:
          type: integer
        input:
          additionalProperties: true
          type: object
        retry_completed:
          type: boolean
      required:
      - count
      type: object
    perr.ErrorDetailModel:
      example:
        location: location
        message: message
      properties:
        location:
          type: string
        message:
          type: string
      type: object
    perr.ErrorModel:
      example:
        instance: instance
        validation_errors:
        - location: location
          message: message
        - location: location
          message: message
        detail: detail
        title: title
        type: type
        status: 0
      properties:
        detail:
          description: If we don't have required it comes out as pointer and there
            is a bug in the formatter
          type: string
        instance:
          type: string
        status:
          type: integer
        title:
          type: string
        type:
          type: string
        validation_errors:
          items:
            $ref: '#/components/schemas/perr.ErrorDetailModel'
          type: array
      required:
      - detail
      - instance
      - status
      - title
      - type
      type: object
    execution_StepExecution_output:
      allOf:
      - $ref: '#/components/schemas/modconfig.Output'
      description: Native/primitive output of the step
      type: object
    execution_StepExecution_step_for_each:
      allOf:
      - $ref: '#/components/schemas/modconfig.StepForEach'
      description: for_each controls
      type: object
    hcl_Range_start:
      allOf:
      - $ref: '#/components/schemas/hcl.Pos'
      description: |-
        Start and End represent the bounds of this range. Start is inclusive
        and End is exclusive.
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
