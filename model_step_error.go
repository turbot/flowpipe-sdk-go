/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the StepError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StepError{}

// StepError struct for StepError
type StepError struct {
	ErrorCode *int32 `json:"error_code,omitempty"`
	Message *string `json:"message,omitempty"`
	Pipeline *string `json:"pipeline,omitempty"`
	PipelineExecutionId *string `json:"pipeline_execution_id,omitempty"`
	Step *string `json:"step,omitempty"`
	StepExecutionId *string `json:"step_execution_id,omitempty"`
}
func (o StepError) GetResourceType() string {
	return "StepError"
}
// NewStepError instantiates a new StepError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStepError() *StepError {
	this := StepError{}
	return &this
}

// NewStepErrorWithDefaults instantiates a new StepError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStepErrorWithDefaults() *StepError {
	this := StepError{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *StepError) GetErrorCode() int32 {
	if o == nil || IsNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StepError) GetErrorCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *StepError) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *StepError) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *StepError) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StepError) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *StepError) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *StepError) SetMessage(v string) {
	o.Message = &v
}

// GetPipeline returns the Pipeline field value if set, zero value otherwise.
func (o *StepError) GetPipeline() string {
	if o == nil || IsNil(o.Pipeline) {
		var ret string
		return ret
	}
	return *o.Pipeline
}

// GetPipelineOk returns a tuple with the Pipeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StepError) GetPipelineOk() (*string, bool) {
	if o == nil || IsNil(o.Pipeline) {
		return nil, false
	}
	return o.Pipeline, true
}

// HasPipeline returns a boolean if a field has been set.
func (o *StepError) HasPipeline() bool {
	if o != nil && !IsNil(o.Pipeline) {
		return true
	}

	return false
}

// SetPipeline gets a reference to the given string and assigns it to the Pipeline field.
func (o *StepError) SetPipeline(v string) {
	o.Pipeline = &v
}

// GetPipelineExecutionId returns the PipelineExecutionId field value if set, zero value otherwise.
func (o *StepError) GetPipelineExecutionId() string {
	if o == nil || IsNil(o.PipelineExecutionId) {
		var ret string
		return ret
	}
	return *o.PipelineExecutionId
}

// GetPipelineExecutionIdOk returns a tuple with the PipelineExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StepError) GetPipelineExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineExecutionId) {
		return nil, false
	}
	return o.PipelineExecutionId, true
}

// HasPipelineExecutionId returns a boolean if a field has been set.
func (o *StepError) HasPipelineExecutionId() bool {
	if o != nil && !IsNil(o.PipelineExecutionId) {
		return true
	}

	return false
}

// SetPipelineExecutionId gets a reference to the given string and assigns it to the PipelineExecutionId field.
func (o *StepError) SetPipelineExecutionId(v string) {
	o.PipelineExecutionId = &v
}

// GetStep returns the Step field value if set, zero value otherwise.
func (o *StepError) GetStep() string {
	if o == nil || IsNil(o.Step) {
		var ret string
		return ret
	}
	return *o.Step
}

// GetStepOk returns a tuple with the Step field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StepError) GetStepOk() (*string, bool) {
	if o == nil || IsNil(o.Step) {
		return nil, false
	}
	return o.Step, true
}

// HasStep returns a boolean if a field has been set.
func (o *StepError) HasStep() bool {
	if o != nil && !IsNil(o.Step) {
		return true
	}

	return false
}

// SetStep gets a reference to the given string and assigns it to the Step field.
func (o *StepError) SetStep(v string) {
	o.Step = &v
}

// GetStepExecutionId returns the StepExecutionId field value if set, zero value otherwise.
func (o *StepError) GetStepExecutionId() string {
	if o == nil || IsNil(o.StepExecutionId) {
		var ret string
		return ret
	}
	return *o.StepExecutionId
}

// GetStepExecutionIdOk returns a tuple with the StepExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StepError) GetStepExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.StepExecutionId) {
		return nil, false
	}
	return o.StepExecutionId, true
}

// HasStepExecutionId returns a boolean if a field has been set.
func (o *StepError) HasStepExecutionId() bool {
	if o != nil && !IsNil(o.StepExecutionId) {
		return true
	}

	return false
}

// SetStepExecutionId gets a reference to the given string and assigns it to the StepExecutionId field.
func (o *StepError) SetStepExecutionId(v string) {
	o.StepExecutionId = &v
}

func (o StepError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StepError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorCode) {
		toSerialize["error_code"] = o.ErrorCode
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Pipeline) {
		toSerialize["pipeline"] = o.Pipeline
	}
	if !IsNil(o.PipelineExecutionId) {
		toSerialize["pipeline_execution_id"] = o.PipelineExecutionId
	}
	if !IsNil(o.Step) {
		toSerialize["step"] = o.Step
	}
	if !IsNil(o.StepExecutionId) {
		toSerialize["step_execution_id"] = o.StepExecutionId
	}
	return toSerialize, nil
}

type NullableStepError struct {
	value *StepError
	isSet bool
}

func (v NullableStepError) Get() *StepError {
	return v.value
}

func (v *NullableStepError) Set(val *StepError) {
	v.value = val
	v.isSet = true
}

func (v NullableStepError) IsSet() bool {
	return v.isSet
}

func (v *NullableStepError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStepError(val *StepError) *NullableStepError {
	return &NullableStepError{value: val, isSet: true}
}

func (v NullableStepError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStepError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


