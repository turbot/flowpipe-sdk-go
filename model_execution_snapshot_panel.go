/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the ExecutionSnapshotPanel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionSnapshotPanel{}

// ExecutionSnapshotPanel struct for ExecutionSnapshotPanel
type ExecutionSnapshotPanel struct {
	Dashboard *string `json:"dashboard,omitempty"`
	Data *ExecutionSnapshotPanelData `json:"data,omitempty"`
	DisplayType *string `json:"display_type,omitempty"`
	Name *string `json:"name,omitempty"`
	PanelType *string `json:"panel_type,omitempty"`
	Properties map[string]interface{} `json:"properties,omitempty"`
	Status *string `json:"status,omitempty"`
	Title *string `json:"title,omitempty"`
	Width *int32 `json:"width,omitempty"`
}
func (o ExecutionSnapshotPanel) GetResourceType() string {
	return "ExecutionSnapshotPanel"
}
// NewExecutionSnapshotPanel instantiates a new ExecutionSnapshotPanel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionSnapshotPanel() *ExecutionSnapshotPanel {
	this := ExecutionSnapshotPanel{}
	return &this
}

// NewExecutionSnapshotPanelWithDefaults instantiates a new ExecutionSnapshotPanel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionSnapshotPanelWithDefaults() *ExecutionSnapshotPanel {
	this := ExecutionSnapshotPanel{}
	return &this
}

// GetDashboard returns the Dashboard field value if set, zero value otherwise.
func (o *ExecutionSnapshotPanel) GetDashboard() string {
	if o == nil || IsNil(o.Dashboard) {
		var ret string
		return ret
	}
	return *o.Dashboard
}

// GetDashboardOk returns a tuple with the Dashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshotPanel) GetDashboardOk() (*string, bool) {
	if o == nil || IsNil(o.Dashboard) {
		return nil, false
	}
	return o.Dashboard, true
}

// HasDashboard returns a boolean if a field has been set.
func (o *ExecutionSnapshotPanel) HasDashboard() bool {
	if o != nil && !IsNil(o.Dashboard) {
		return true
	}

	return false
}

// SetDashboard gets a reference to the given string and assigns it to the Dashboard field.
func (o *ExecutionSnapshotPanel) SetDashboard(v string) {
	o.Dashboard = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ExecutionSnapshotPanel) GetData() ExecutionSnapshotPanelData {
	if o == nil || IsNil(o.Data) {
		var ret ExecutionSnapshotPanelData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshotPanel) GetDataOk() (*ExecutionSnapshotPanelData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ExecutionSnapshotPanel) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given ExecutionSnapshotPanelData and assigns it to the Data field.
func (o *ExecutionSnapshotPanel) SetData(v ExecutionSnapshotPanelData) {
	o.Data = &v
}

// GetDisplayType returns the DisplayType field value if set, zero value otherwise.
func (o *ExecutionSnapshotPanel) GetDisplayType() string {
	if o == nil || IsNil(o.DisplayType) {
		var ret string
		return ret
	}
	return *o.DisplayType
}

// GetDisplayTypeOk returns a tuple with the DisplayType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshotPanel) GetDisplayTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayType) {
		return nil, false
	}
	return o.DisplayType, true
}

// HasDisplayType returns a boolean if a field has been set.
func (o *ExecutionSnapshotPanel) HasDisplayType() bool {
	if o != nil && !IsNil(o.DisplayType) {
		return true
	}

	return false
}

// SetDisplayType gets a reference to the given string and assigns it to the DisplayType field.
func (o *ExecutionSnapshotPanel) SetDisplayType(v string) {
	o.DisplayType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExecutionSnapshotPanel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshotPanel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExecutionSnapshotPanel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExecutionSnapshotPanel) SetName(v string) {
	o.Name = &v
}

// GetPanelType returns the PanelType field value if set, zero value otherwise.
func (o *ExecutionSnapshotPanel) GetPanelType() string {
	if o == nil || IsNil(o.PanelType) {
		var ret string
		return ret
	}
	return *o.PanelType
}

// GetPanelTypeOk returns a tuple with the PanelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshotPanel) GetPanelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PanelType) {
		return nil, false
	}
	return o.PanelType, true
}

// HasPanelType returns a boolean if a field has been set.
func (o *ExecutionSnapshotPanel) HasPanelType() bool {
	if o != nil && !IsNil(o.PanelType) {
		return true
	}

	return false
}

// SetPanelType gets a reference to the given string and assigns it to the PanelType field.
func (o *ExecutionSnapshotPanel) SetPanelType(v string) {
	o.PanelType = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ExecutionSnapshotPanel) GetProperties() map[string]interface{} {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshotPanel) GetPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return map[string]interface{}{}, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *ExecutionSnapshotPanel) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *ExecutionSnapshotPanel) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ExecutionSnapshotPanel) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshotPanel) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ExecutionSnapshotPanel) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ExecutionSnapshotPanel) SetStatus(v string) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ExecutionSnapshotPanel) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshotPanel) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ExecutionSnapshotPanel) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ExecutionSnapshotPanel) SetTitle(v string) {
	o.Title = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *ExecutionSnapshotPanel) GetWidth() int32 {
	if o == nil || IsNil(o.Width) {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionSnapshotPanel) GetWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *ExecutionSnapshotPanel) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *ExecutionSnapshotPanel) SetWidth(v int32) {
	o.Width = &v
}

func (o ExecutionSnapshotPanel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionSnapshotPanel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dashboard) {
		toSerialize["dashboard"] = o.Dashboard
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.DisplayType) {
		toSerialize["display_type"] = o.DisplayType
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PanelType) {
		toSerialize["panel_type"] = o.PanelType
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	return toSerialize, nil
}

type NullableExecutionSnapshotPanel struct {
	value *ExecutionSnapshotPanel
	isSet bool
}

func (v NullableExecutionSnapshotPanel) Get() *ExecutionSnapshotPanel {
	return v.value
}

func (v *NullableExecutionSnapshotPanel) Set(val *ExecutionSnapshotPanel) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionSnapshotPanel) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionSnapshotPanel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionSnapshotPanel(val *ExecutionSnapshotPanel) *NullableExecutionSnapshotPanel {
	return &NullableExecutionSnapshotPanel{value: val, isSet: true}
}

func (v NullableExecutionSnapshotPanel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionSnapshotPanel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


