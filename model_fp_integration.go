/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the FpIntegration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FpIntegration{}

// FpIntegration struct for FpIntegration
type FpIntegration struct {
	Description *string `json:"description,omitempty"`
	Documentation *string `json:"documentation,omitempty"`
	EndLineNumber *int32 `json:"end_line_number,omitempty"`
	FileName *string `json:"file_name,omitempty"`
	Name *string `json:"name,omitempty"`
	StartLineNumber *int32 `json:"start_line_number,omitempty"`
	Tags *map[string]string `json:"tags,omitempty"`
	Title *string `json:"title,omitempty"`
	Type *string `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}
func (o FpIntegration) GetResourceType() string {
	return "FpIntegration"
}
// NewFpIntegration instantiates a new FpIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFpIntegration() *FpIntegration {
	this := FpIntegration{}
	return &this
}

// NewFpIntegrationWithDefaults instantiates a new FpIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFpIntegrationWithDefaults() *FpIntegration {
	this := FpIntegration{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FpIntegration) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpIntegration) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FpIntegration) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FpIntegration) SetDescription(v string) {
	o.Description = &v
}

// GetDocumentation returns the Documentation field value if set, zero value otherwise.
func (o *FpIntegration) GetDocumentation() string {
	if o == nil || IsNil(o.Documentation) {
		var ret string
		return ret
	}
	return *o.Documentation
}

// GetDocumentationOk returns a tuple with the Documentation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpIntegration) GetDocumentationOk() (*string, bool) {
	if o == nil || IsNil(o.Documentation) {
		return nil, false
	}
	return o.Documentation, true
}

// HasDocumentation returns a boolean if a field has been set.
func (o *FpIntegration) HasDocumentation() bool {
	if o != nil && !IsNil(o.Documentation) {
		return true
	}

	return false
}

// SetDocumentation gets a reference to the given string and assigns it to the Documentation field.
func (o *FpIntegration) SetDocumentation(v string) {
	o.Documentation = &v
}

// GetEndLineNumber returns the EndLineNumber field value if set, zero value otherwise.
func (o *FpIntegration) GetEndLineNumber() int32 {
	if o == nil || IsNil(o.EndLineNumber) {
		var ret int32
		return ret
	}
	return *o.EndLineNumber
}

// GetEndLineNumberOk returns a tuple with the EndLineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpIntegration) GetEndLineNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.EndLineNumber) {
		return nil, false
	}
	return o.EndLineNumber, true
}

// HasEndLineNumber returns a boolean if a field has been set.
func (o *FpIntegration) HasEndLineNumber() bool {
	if o != nil && !IsNil(o.EndLineNumber) {
		return true
	}

	return false
}

// SetEndLineNumber gets a reference to the given int32 and assigns it to the EndLineNumber field.
func (o *FpIntegration) SetEndLineNumber(v int32) {
	o.EndLineNumber = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *FpIntegration) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpIntegration) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *FpIntegration) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *FpIntegration) SetFileName(v string) {
	o.FileName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FpIntegration) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpIntegration) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FpIntegration) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FpIntegration) SetName(v string) {
	o.Name = &v
}

// GetStartLineNumber returns the StartLineNumber field value if set, zero value otherwise.
func (o *FpIntegration) GetStartLineNumber() int32 {
	if o == nil || IsNil(o.StartLineNumber) {
		var ret int32
		return ret
	}
	return *o.StartLineNumber
}

// GetStartLineNumberOk returns a tuple with the StartLineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpIntegration) GetStartLineNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.StartLineNumber) {
		return nil, false
	}
	return o.StartLineNumber, true
}

// HasStartLineNumber returns a boolean if a field has been set.
func (o *FpIntegration) HasStartLineNumber() bool {
	if o != nil && !IsNil(o.StartLineNumber) {
		return true
	}

	return false
}

// SetStartLineNumber gets a reference to the given int32 and assigns it to the StartLineNumber field.
func (o *FpIntegration) SetStartLineNumber(v int32) {
	o.StartLineNumber = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FpIntegration) GetTags() map[string]string {
	if o == nil || IsNil(o.Tags) {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpIntegration) GetTagsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FpIntegration) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *FpIntegration) SetTags(v map[string]string) {
	o.Tags = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *FpIntegration) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpIntegration) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *FpIntegration) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *FpIntegration) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *FpIntegration) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpIntegration) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *FpIntegration) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *FpIntegration) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *FpIntegration) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FpIntegration) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *FpIntegration) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *FpIntegration) SetUrl(v string) {
	o.Url = &v
}

func (o FpIntegration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FpIntegration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Documentation) {
		toSerialize["documentation"] = o.Documentation
	}
	if !IsNil(o.EndLineNumber) {
		toSerialize["end_line_number"] = o.EndLineNumber
	}
	if !IsNil(o.FileName) {
		toSerialize["file_name"] = o.FileName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StartLineNumber) {
		toSerialize["start_line_number"] = o.StartLineNumber
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableFpIntegration struct {
	value *FpIntegration
	isSet bool
}

func (v NullableFpIntegration) Get() *FpIntegration {
	return v.value
}

func (v *NullableFpIntegration) Set(val *FpIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableFpIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableFpIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFpIntegration(val *FpIntegration) *NullableFpIntegration {
	return &NullableFpIntegration{value: val, isSet: true}
}

func (v NullableFpIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFpIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


