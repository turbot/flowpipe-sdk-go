/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the CmdPipeline type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CmdPipeline{}

// CmdPipeline struct for CmdPipeline
type CmdPipeline struct {
	Command string `json:"command"`
}
func (o CmdPipeline) GetResourceType() string {
	return "CmdPipeline"
}
// NewCmdPipeline instantiates a new CmdPipeline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCmdPipeline(command string) *CmdPipeline {
	this := CmdPipeline{}
	this.Command = command
	return &this
}

// NewCmdPipelineWithDefaults instantiates a new CmdPipeline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCmdPipelineWithDefaults() *CmdPipeline {
	this := CmdPipeline{}
	return &this
}

// GetCommand returns the Command field value
func (o *CmdPipeline) GetCommand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *CmdPipeline) GetCommandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *CmdPipeline) SetCommand(v string) {
	o.Command = v
}

func (o CmdPipeline) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CmdPipeline) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["command"] = o.Command
	return toSerialize, nil
}

type NullableCmdPipeline struct {
	value *CmdPipeline
	isSet bool
}

func (v NullableCmdPipeline) Get() *CmdPipeline {
	return v.value
}

func (v *NullableCmdPipeline) Set(val *CmdPipeline) {
	v.value = val
	v.isSet = true
}

func (v NullableCmdPipeline) IsSet() bool {
	return v.isSet
}

func (v *NullableCmdPipeline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCmdPipeline(val *CmdPipeline) *NullableCmdPipeline {
	return &NullableCmdPipeline{value: val, isSet: true}
}

func (v NullableCmdPipeline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCmdPipeline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


