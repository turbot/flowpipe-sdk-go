/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the ModconfigStepRetry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModconfigStepRetry{}

// ModconfigStepRetry struct for ModconfigStepRetry
type ModconfigStepRetry struct {
	Index int32 `json:"index"`
	Input map[string]interface{} `json:"input,omitempty"`
	RetryCompleted *bool `json:"retry_completed,omitempty"`
}
func (o ModconfigStepRetry) GetResourceType() string {
	return "ModconfigStepRetry"
}
// NewModconfigStepRetry instantiates a new ModconfigStepRetry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModconfigStepRetry(index int32) *ModconfigStepRetry {
	this := ModconfigStepRetry{}
	this.Index = index
	return &this
}

// NewModconfigStepRetryWithDefaults instantiates a new ModconfigStepRetry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModconfigStepRetryWithDefaults() *ModconfigStepRetry {
	this := ModconfigStepRetry{}
	return &this
}

// GetIndex returns the Index field value
func (o *ModconfigStepRetry) GetIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *ModconfigStepRetry) GetIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *ModconfigStepRetry) SetIndex(v int32) {
	o.Index = v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *ModconfigStepRetry) GetInput() map[string]interface{} {
	if o == nil || IsNil(o.Input) {
		var ret map[string]interface{}
		return ret
	}
	return o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModconfigStepRetry) GetInputOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Input) {
		return map[string]interface{}{}, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *ModconfigStepRetry) HasInput() bool {
	if o != nil && !IsNil(o.Input) {
		return true
	}

	return false
}

// SetInput gets a reference to the given map[string]interface{} and assigns it to the Input field.
func (o *ModconfigStepRetry) SetInput(v map[string]interface{}) {
	o.Input = v
}

// GetRetryCompleted returns the RetryCompleted field value if set, zero value otherwise.
func (o *ModconfigStepRetry) GetRetryCompleted() bool {
	if o == nil || IsNil(o.RetryCompleted) {
		var ret bool
		return ret
	}
	return *o.RetryCompleted
}

// GetRetryCompletedOk returns a tuple with the RetryCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModconfigStepRetry) GetRetryCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.RetryCompleted) {
		return nil, false
	}
	return o.RetryCompleted, true
}

// HasRetryCompleted returns a boolean if a field has been set.
func (o *ModconfigStepRetry) HasRetryCompleted() bool {
	if o != nil && !IsNil(o.RetryCompleted) {
		return true
	}

	return false
}

// SetRetryCompleted gets a reference to the given bool and assigns it to the RetryCompleted field.
func (o *ModconfigStepRetry) SetRetryCompleted(v bool) {
	o.RetryCompleted = &v
}

func (o ModconfigStepRetry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModconfigStepRetry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["index"] = o.Index
	if !IsNil(o.Input) {
		toSerialize["input"] = o.Input
	}
	if !IsNil(o.RetryCompleted) {
		toSerialize["retry_completed"] = o.RetryCompleted
	}
	return toSerialize, nil
}

type NullableModconfigStepRetry struct {
	value *ModconfigStepRetry
	isSet bool
}

func (v NullableModconfigStepRetry) Get() *ModconfigStepRetry {
	return v.value
}

func (v *NullableModconfigStepRetry) Set(val *ModconfigStepRetry) {
	v.value = val
	v.isSet = true
}

func (v NullableModconfigStepRetry) IsSet() bool {
	return v.isSet
}

func (v *NullableModconfigStepRetry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModconfigStepRetry(val *ModconfigStepRetry) *NullableModconfigStepRetry {
	return &NullableModconfigStepRetry{value: val, isSet: true}
}

func (v NullableModconfigStepRetry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModconfigStepRetry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


