/*
Flowpipe

Flowpipe is workflow and pipelines for DevSecOps.

API version: 0.1.0
Contact: info@flowpipe.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package flowpipeapi

import (
	"encoding/json"
)

// checks if the ExecutionPipelineExecution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionPipelineExecution{}

// ExecutionPipelineExecution struct for ExecutionPipelineExecution
type ExecutionPipelineExecution struct {
	Args map[string]interface{} `json:"args,omitempty"`
	// All errors from the step execution + any errors that can be added to the pipeline execution manually
	Errors []StepError `json:"errors,omitempty"`
	// Unique identifier for this pipeline execution
	Id *string `json:"id,omitempty"`
	// The name of the pipeline
	Name *string `json:"name,omitempty"`
	ParentExecutionId *string `json:"parent_execution_id,omitempty"`
	// If this is a child pipeline, then track it's parent
	ParentStepExecutionId *string `json:"parent_step_execution_id,omitempty"`
	// The output of the pipeline
	PipelineOutput map[string]interface{} `json:"pipeline_output,omitempty"`
	// The status of the pipeline execution: queued, planned, started, completed, failed
	Status *string `json:"status,omitempty"`
	// Steps triggered by pipelines in the execution.
	StepExecutions *map[string]ExecutionStepExecution `json:"step_executions,omitempty"`
}
func (o ExecutionPipelineExecution) GetResourceType() string {
	return "ExecutionPipelineExecution"
}
// NewExecutionPipelineExecution instantiates a new ExecutionPipelineExecution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionPipelineExecution() *ExecutionPipelineExecution {
	this := ExecutionPipelineExecution{}
	return &this
}

// NewExecutionPipelineExecutionWithDefaults instantiates a new ExecutionPipelineExecution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionPipelineExecutionWithDefaults() *ExecutionPipelineExecution {
	this := ExecutionPipelineExecution{}
	return &this
}

// GetArgs returns the Args field value if set, zero value otherwise.
func (o *ExecutionPipelineExecution) GetArgs() map[string]interface{} {
	if o == nil || IsNil(o.Args) {
		var ret map[string]interface{}
		return ret
	}
	return o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPipelineExecution) GetArgsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Args) {
		return map[string]interface{}{}, false
	}
	return o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *ExecutionPipelineExecution) HasArgs() bool {
	if o != nil && !IsNil(o.Args) {
		return true
	}

	return false
}

// SetArgs gets a reference to the given map[string]interface{} and assigns it to the Args field.
func (o *ExecutionPipelineExecution) SetArgs(v map[string]interface{}) {
	o.Args = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ExecutionPipelineExecution) GetErrors() []StepError {
	if o == nil || IsNil(o.Errors) {
		var ret []StepError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPipelineExecution) GetErrorsOk() ([]StepError, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ExecutionPipelineExecution) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []StepError and assigns it to the Errors field.
func (o *ExecutionPipelineExecution) SetErrors(v []StepError) {
	o.Errors = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExecutionPipelineExecution) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPipelineExecution) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExecutionPipelineExecution) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ExecutionPipelineExecution) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExecutionPipelineExecution) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPipelineExecution) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExecutionPipelineExecution) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExecutionPipelineExecution) SetName(v string) {
	o.Name = &v
}

// GetParentExecutionId returns the ParentExecutionId field value if set, zero value otherwise.
func (o *ExecutionPipelineExecution) GetParentExecutionId() string {
	if o == nil || IsNil(o.ParentExecutionId) {
		var ret string
		return ret
	}
	return *o.ParentExecutionId
}

// GetParentExecutionIdOk returns a tuple with the ParentExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPipelineExecution) GetParentExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentExecutionId) {
		return nil, false
	}
	return o.ParentExecutionId, true
}

// HasParentExecutionId returns a boolean if a field has been set.
func (o *ExecutionPipelineExecution) HasParentExecutionId() bool {
	if o != nil && !IsNil(o.ParentExecutionId) {
		return true
	}

	return false
}

// SetParentExecutionId gets a reference to the given string and assigns it to the ParentExecutionId field.
func (o *ExecutionPipelineExecution) SetParentExecutionId(v string) {
	o.ParentExecutionId = &v
}

// GetParentStepExecutionId returns the ParentStepExecutionId field value if set, zero value otherwise.
func (o *ExecutionPipelineExecution) GetParentStepExecutionId() string {
	if o == nil || IsNil(o.ParentStepExecutionId) {
		var ret string
		return ret
	}
	return *o.ParentStepExecutionId
}

// GetParentStepExecutionIdOk returns a tuple with the ParentStepExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPipelineExecution) GetParentStepExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentStepExecutionId) {
		return nil, false
	}
	return o.ParentStepExecutionId, true
}

// HasParentStepExecutionId returns a boolean if a field has been set.
func (o *ExecutionPipelineExecution) HasParentStepExecutionId() bool {
	if o != nil && !IsNil(o.ParentStepExecutionId) {
		return true
	}

	return false
}

// SetParentStepExecutionId gets a reference to the given string and assigns it to the ParentStepExecutionId field.
func (o *ExecutionPipelineExecution) SetParentStepExecutionId(v string) {
	o.ParentStepExecutionId = &v
}

// GetPipelineOutput returns the PipelineOutput field value if set, zero value otherwise.
func (o *ExecutionPipelineExecution) GetPipelineOutput() map[string]interface{} {
	if o == nil || IsNil(o.PipelineOutput) {
		var ret map[string]interface{}
		return ret
	}
	return o.PipelineOutput
}

// GetPipelineOutputOk returns a tuple with the PipelineOutput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPipelineExecution) GetPipelineOutputOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PipelineOutput) {
		return map[string]interface{}{}, false
	}
	return o.PipelineOutput, true
}

// HasPipelineOutput returns a boolean if a field has been set.
func (o *ExecutionPipelineExecution) HasPipelineOutput() bool {
	if o != nil && !IsNil(o.PipelineOutput) {
		return true
	}

	return false
}

// SetPipelineOutput gets a reference to the given map[string]interface{} and assigns it to the PipelineOutput field.
func (o *ExecutionPipelineExecution) SetPipelineOutput(v map[string]interface{}) {
	o.PipelineOutput = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ExecutionPipelineExecution) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPipelineExecution) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ExecutionPipelineExecution) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ExecutionPipelineExecution) SetStatus(v string) {
	o.Status = &v
}

// GetStepExecutions returns the StepExecutions field value if set, zero value otherwise.
func (o *ExecutionPipelineExecution) GetStepExecutions() map[string]ExecutionStepExecution {
	if o == nil || IsNil(o.StepExecutions) {
		var ret map[string]ExecutionStepExecution
		return ret
	}
	return *o.StepExecutions
}

// GetStepExecutionsOk returns a tuple with the StepExecutions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPipelineExecution) GetStepExecutionsOk() (*map[string]ExecutionStepExecution, bool) {
	if o == nil || IsNil(o.StepExecutions) {
		return nil, false
	}
	return o.StepExecutions, true
}

// HasStepExecutions returns a boolean if a field has been set.
func (o *ExecutionPipelineExecution) HasStepExecutions() bool {
	if o != nil && !IsNil(o.StepExecutions) {
		return true
	}

	return false
}

// SetStepExecutions gets a reference to the given map[string]ExecutionStepExecution and assigns it to the StepExecutions field.
func (o *ExecutionPipelineExecution) SetStepExecutions(v map[string]ExecutionStepExecution) {
	o.StepExecutions = &v
}

func (o ExecutionPipelineExecution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionPipelineExecution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Args) {
		toSerialize["args"] = o.Args
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ParentExecutionId) {
		toSerialize["parent_execution_id"] = o.ParentExecutionId
	}
	if !IsNil(o.ParentStepExecutionId) {
		toSerialize["parent_step_execution_id"] = o.ParentStepExecutionId
	}
	if !IsNil(o.PipelineOutput) {
		toSerialize["pipeline_output"] = o.PipelineOutput
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StepExecutions) {
		toSerialize["step_executions"] = o.StepExecutions
	}
	return toSerialize, nil
}

type NullableExecutionPipelineExecution struct {
	value *ExecutionPipelineExecution
	isSet bool
}

func (v NullableExecutionPipelineExecution) Get() *ExecutionPipelineExecution {
	return v.value
}

func (v *NullableExecutionPipelineExecution) Set(val *ExecutionPipelineExecution) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionPipelineExecution) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionPipelineExecution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionPipelineExecution(val *ExecutionPipelineExecution) *NullableExecutionPipelineExecution {
	return &NullableExecutionPipelineExecution{value: val, isSet: true}
}

func (v NullableExecutionPipelineExecution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionPipelineExecution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


